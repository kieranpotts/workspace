{

  "folders": [
    {
      "name": "__TODO__ â›”",
      "path": "../../__TODO__"
    },
    {
      "name": "actions",
      "path": "../../actions"
    },
    {
      "name": "avatar",
      "path": "../../avatar"
    },
    {
      "name": "blog",
      "path": "../../blog"
    },
    {
      "name": "bootstrap",
      "path": "../../bootstrap"
    },
    {
      "name": "cheats",
      "path": "../../cheats"
    },
    {
      "name": "cover-letter â›”",
      "path": "../../cover-letter"
    },
    {
      "name": "designs",
      "path": "../../designs"
    },
    {
      "name": "devboxes ðŸ”’",
      "path": "../../devboxes"
    },
    {
      "name": "devtools",
      "path": "../../devtools"
    },
    {
      "name": "dictionary",
      "path": "../../dictionary"
    },
    {
      "name": "dotfiles",
      "path": "../../dotfiles"
    },
    {
      "name": "eslint-config ðŸ”’",
      "path": "../../eslint-config"
    },
    {
      "name": "garden",
      "path": "../../garden"
    },
    {
      "name": "gitex",
      "path": "../../gitex"
    },
    {
      "name": "interviews â›”",
      "path": "../../interviews"
    },
    {
      "name": "json-schema",
      "path": "../../json-schema"
    },
    {
      "name": "kieranpotts",
      "path": "../../kieranpotts"
    },
    {
      "name": "makebook ðŸ”’",
      "path": "../../makebook"
    },
    {
      "name": "ocean",
      "path": "../../ocean"
    },
    {
      "name": "playbook",
      "path": "../../playbook"
    },
    {
      "name": "prototypes ðŸ”’",
      "path": "../../prototypes"
    },
    {
      "name": "rÃ©sumÃ©",
      "path": "../../resume"
    },
    {
      "name": "rfcs ðŸ”’",
      "path": "../../rfcs"
    },
    {
      "name": "sh ðŸ”’",
      "path": "../../sh"
    },
    {
      "name": "standards",
      "path": "../../standards"
    },
    {
      "name": "srcflow",
      "path": "../../srcflow"
    },
    {
      "name": "template",
      "path": "../../template"
    },
    {
      "name": "website",
      "path": "../../website"
    },
    {
      "name": "workspace",
      "path": "../../workspace"
    }
  ],

  "extensions": {

    "recommendations": [

      /*
      The following are general-purpose extensions for VS Code, which will be
      useful in the context of most software projects. The extend VS Code's
      own functionality, rather than providing capabilities for particular
      languages, tools, or runtime environments.

      Language servers and tool-specific extensions, such as the official Python
      extension and wrappers for JavaScript tools such as ESLint, SHOULD be
      added to each repository's `.vscode/extensions.js` file, as required for
      each project.

      To install the extensions, open this repository in its own workspace, then
      go to the Recommended section of the Extensions panel.

      Some extensions will need to be enabled in WSL, too.

      See also:
      https://code.visualstudio.com/docs/editor/extension-marketplace#_workspace-recommended-extensions
      */

      /* Code Spell Checker â€” Spelling checker for all source code. */
      "streetsidesoftware.code-spell-checker",

      /* Draw.io Integration â€” Edit images with draw.io directly inside VS Code. */
      "hediet.vscode-drawio",

      /* Fold Plus â€” Additional code folding commands. */
      "dakara.dakara-foldplus",

      /* Git History â€” Adds a `git log` panel to VS Code. */
      "guodongsun.vscode-git-cruise",

      /* GitHub Copilot â€” Intelligent code suggestions. */
      "github.copilot",

      /* GitHub Copilot Chat */
      "github.copilot-chat",

      /* GitHub Theme â€” GitHub-style theme for VS Code. */
      "GitHub.github-vscode-theme",

      /* IntelliCode â€” AI-assisted development. */
      "visualstudioexptteam.vscodeintellicode",

      /* Intellicode API Usage Examples â€” See code examples for hundreds-of-thousands of APIs. */
      "visualstudioexptteam.intellicode-api-usage-examples",

      /* Remote - SSH â€” Connect to a remote machine using SSH. */
      "ms-vscode-remote.remote-ssh",

      /* Remote - SSH â€” Editing Configuration Files â€” Edit SSH configuration files. */
      "ms-vscode-remote.remote-ssh-edit",

      /* Remote Repositories â€” Remotely browse and edit Git repositories. */
      "ms-vscode.remote-repositories",

      /* Render Line Endings â€” Displays line ending symbols and other white space characters. */
      "medo64.render-crlf",

      /* Restore Editors â€” Quickly save and restore groups of editors (ie. editor tabs). */
      "amodio.restore-editors",

      /* The Ocean â€” My own VS Code theme. */
      "kieranpotts.ocean-vscode-theme",

      /* Todo Tree â€” Browse TODO, FIXME and other comments. */
      "gruntfuggly.todo-tree",

      /* UMLet â€” Generate diagrams with UMLet. To use, simply create a new text file with the `.uxf` extension. */
      "theumletteam.umlet",

      /* VS Code Speech â€” Speech recognition. */
      "ms-vscode.vscode-speech",

      /* vscode-pdf â€” Render PDF documents in VS Code. */
      "tomoki1207.pdf",

      /* WSL â€” Open folders and workspaces from WSL. */
      "ms-vscode-remote.remote-wsl",

    ]
  },

  "settings": {

    /* Remove archived repositories from VS Code's built-in Git GUI â€“ can't push
    to these anyway. This setting requires use of absolute paths. */
    "git.ignoredRepositories": [
      "/home/kieran/dev/personal/devboxes",
      "/home/kieran/dev/personal/eslint-config",
      "/home/kieran/dev/personal/makebook",
      "/home/kieran/dev/personal/prototypes",
      "/home/kieran/dev/personal/rfcs",
      "/home/kieran/dev/personal/sh",
    ],

    /* Disable the feature to automatically save and restore open editors when
    switching between source control branches. Having this turned on is a bit
    annoying when working with multiple repos in a workspace. */
    "scm.workingSets.enabled": false,

    /*
    IMPORTANT!
    The following settings SHOULD be replicated in `./.vscode/settings.json`
    in each repository, as appropriate, to ensure the settings are applied when
    individual repositories are opened in their own workspaces.
    */

    /* Vertical guidelines for line wrapping. */
    "editor.rulers": [
      80,
      100,
      120,
    ],

    /* By default, wrap long lines at the viewport or 120 characters, whichever is narrowest. */
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 120,

    /* Show control and empty space characters. */
    "editor.renderControlCharacters": true,
    "editor.renderWhitespace": "all",

    /* Enforce 2 spaces for indentation by default. */
    "editor.detectIndentation": false,
    "editor.insertSpaces": true,
    "editor.tabSize": 2,

    /* Disable auto-formatting by default. */
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,

    /* Disable auto-fixes by default. */
    "editor.codeActionsOnSave": {
      "source.fixAll": "never"
    },

    /* Language-specific overrides. */
    "[asciidoc]": {
      "editor.rulers": [100],
      "editor.wordWrap": "bounded",
      "editor.wordWrapColumn": 100,
    },
    "[markdown]": {
      "editor.rulers": [100],
      "editor.wordWrap": "bounded",
      "editor.wordWrapColumn": 100,
    },
    "[terraform]": {
      /* Enable autoformatting of Terraform files. */
      "editor.defaultFormatter": "hashicorp.terraform",
      "editor.formatOnPaste": true,
      "editor.formatOnSave": true,
      "editor.formatOnType": true,
    },

    /* Preference for quotes in JS/TS code. */
    "javascript.preferences.quoteStyle": "single",
    "typescript.preferences.quoteStyle": "single",

    /* Disable auto-formatting and validation for JavaScript/TypeScript. These
    settings MUST be applied at the workspace level. */
    "javascript.format.enable": false,
    "javascript.validate.enable": false,
    "js/ts.implicitProjectConfig.checkJs": false,

    /* Always prompt before committing to a protected branch. */
    "git.branchProtectionPrompt": "alwaysPrompt",
    "git.branchProtection": [
      // "stable",
      // "release/*",
    ],

  }
}
